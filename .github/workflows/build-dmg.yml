name: Convertir app.py en .dmg

on:
  push:
    branches: [main]

jobs:
  build-dmg:
    runs-on: macos-latest

    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v3

      - name: Trouver app.py dans le dépôt
        id: find_app
        run: |
          APP_PATH=$(find . -name app.py | head -n 1)
          echo "app_path=$APP_PATH" >> $GITHUB_OUTPUT

      - name: Nettoyer builds précédents
        run: rm -rf build dist *.egg-info

      - name: Créer un environnement virtuel Python 3.11
        run: |
          python3.11 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel py2app

      - name: Créer le fichier setup.py
        run: |
          echo "from setuptools import setup" > setup.py
          echo "APP = ['$APP_PATH']" >> setup.py
          echo "OPTIONS = {'argv_emulation': True, 'packages': []}" >> setup.py
          echo "setup(app=APP, options={'py2app': OPTIONS}, setup_requires=['py2app'])" >> setup.py
        env:
          APP_PATH: ${{ steps.find_app.outputs.app_path }}

      - name: Packager en .app avec py2app
        run: |
          source venv/bin/activate
          python setup.py py2app

      - name: Installer create-dmg
        run: brew install create-dmg

      - name: Créer un fichier .dmg
        run: |
          mkdir -p dist-dmg
          create-dmg \
            --volname "MachineTEST2" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --app-drop-link 600 185 \
            dist/app.app \
            dist-dmg/MachineTEST2.dmg

      - name: Upload du .dmg comme artefact
        uses: actions/upload-artifact@v4
        with:
          name: MachineTEST2.dmg
          path: dist-dmg/MachineTEST2.dmg

